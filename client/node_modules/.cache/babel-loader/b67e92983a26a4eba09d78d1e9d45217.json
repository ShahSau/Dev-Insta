{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import ProfileTop from'./ProfileTop';import ProfileAbout from'./ProfileAbout';import ProfileExperience from'./ProfileExperience';import ProfileEducation from'./ProfileEducation';import ProfileGithub from'./ProfileGithub';import{getProfileById}from'../../actions/profile';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(_ref){var getProfileById=_ref.getProfileById,profile=_ref.profile.profile,auth=_ref.auth,match=_ref.match;useEffect(function(){getProfileById(match.params.id);},[getProfileById,match.params.id]);return/*#__PURE__*/_jsx(Fragment,{children:profile===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/profiles\",className:\"btn btn-light\",children:\"Back To Profiles\"}),auth.isAuthenticated&&auth.loading===false&&auth.user._id===profile.user._id&&/*#__PURE__*/_jsx(Link,{to:\"/edit-profile\",className:\"btn btn-dark\",children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-grid my-1\",children:[/*#__PURE__*/_jsx(ProfileTop,{profile:profile}),/*#__PURE__*/_jsx(ProfileAbout,{profile:profile}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-exp bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Experience\"}),profile.experience.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile.experience.map(function(experience){return/*#__PURE__*/_jsx(ProfileExperience,{experience:experience},experience._id);})}):/*#__PURE__*/_jsx(\"h4\",{children:\"No experience credentials\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-edu bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Education\"}),profile.education.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile.education.map(function(education){return/*#__PURE__*/_jsx(ProfileEducation,{education:education},education._id);})}):/*#__PURE__*/_jsx(\"h4\",{children:\"No education credentials\"})]}),profile.githubusername&&/*#__PURE__*/_jsx(ProfileGithub,{username:profile.githubusername})]})]})});};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,auth:state.auth};};export default connect(mapStateToProps,{getProfileById:getProfileById})(Profile);","map":{"version":3,"sources":["/Users/shahriar/Downloads/Dev_Insta-master/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","Link","connect","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileById","Profile","profile","auth","match","params","id","isAuthenticated","loading","user","_id","experience","length","map","education","githubusername","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA2D,IAAxDD,CAAAA,cAAwD,MAAxDA,cAAwD,CAA7BE,OAA6B,MAAxCA,OAAwC,CAA7BA,OAA6B,CAAlBC,IAAkB,MAAlBA,IAAkB,CAAZC,KAAY,MAAZA,KAAY,CACzEb,SAAS,CAAC,UAAM,CACdS,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd,CACD,CAFQ,CAEN,CAACN,cAAD,CAAiBI,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT,CAIA,mBACE,KAAC,QAAD,WACGJ,OAAO,GAAK,IAAZ,cACC,KAAC,OAAD,IADD,cAGC,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,CAAqB,SAAS,CAAC,eAA/B,8BADF,CAIGC,IAAI,CAACI,eAAL,EACCJ,IAAI,CAACK,OAAL,GAAiB,KADlB,EAECL,IAAI,CAACM,IAAL,CAAUC,GAAV,GAAkBR,OAAO,CAACO,IAAR,CAAaC,GAFhC,eAGG,KAAC,IAAD,EAAM,EAAE,CAAC,eAAT,CAAyB,SAAS,CAAC,cAAnC,0BAPN,cAWE,aAAK,SAAS,CAAC,mBAAf,wBACE,KAAC,UAAD,EAAY,OAAO,CAAER,OAArB,EADF,cAEE,KAAC,YAAD,EAAc,OAAO,CAAEA,OAAvB,EAFF,cAGE,aAAK,SAAS,CAAC,0BAAf,wBACE,WAAI,SAAS,CAAC,cAAd,wBADF,CAEGA,OAAO,CAACS,UAAR,CAAmBC,MAAnB,CAA4B,CAA5B,cACC,KAAC,QAAD,WACGV,OAAO,CAACS,UAAR,CAAmBE,GAAnB,CAAuB,SAACF,UAAD,qBACtB,KAAC,iBAAD,EAEE,UAAU,CAAEA,UAFd,EACOA,UAAU,CAACD,GADlB,CADsB,EAAvB,CADH,EADD,cAUC,iDAZJ,GAHF,cAmBE,aAAK,SAAS,CAAC,0BAAf,wBACE,WAAI,SAAS,CAAC,cAAd,uBADF,CAEGR,OAAO,CAACY,SAAR,CAAkBF,MAAlB,CAA2B,CAA3B,cACC,KAAC,QAAD,WACGV,OAAO,CAACY,SAAR,CAAkBD,GAAlB,CAAsB,SAACC,SAAD,qBACrB,KAAC,gBAAD,EAEE,SAAS,CAAEA,SAFb,EACOA,SAAS,CAACJ,GADjB,CADqB,EAAtB,CADH,EADD,cAUC,gDAZJ,GAnBF,CAmCGR,OAAO,CAACa,cAAR,eACC,KAAC,aAAD,EAAe,QAAQ,CAAEb,OAAO,CAACa,cAAjC,EApCJ,GAXF,GAJJ,EADF,CA2DD,CAhED,CAwEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCf,OAAO,CAAEe,KAAK,CAACf,OADmB,CAElCC,IAAI,CAAEc,KAAK,CAACd,IAFsB,CAAZ,EAAxB,CAKA,cAAeV,CAAAA,OAAO,CAACuB,eAAD,CAAkB,CAAEhB,cAAc,CAAdA,cAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 className=\"text-primary\">Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);"]},"metadata":{},"sourceType":"module"}